plugins {
    id 'java'
    id 'antlr'
}

group = 'com.typeobject'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    antlr 'org.antlr:antlr4:4.13.1'
    implementation 'org.antlr:antlr4-runtime:4.13.1'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.1'
}

def grammarPath = 'src/main/antlr/com/typeobject/wheeler/grammar'

generateGrammarSource {
    arguments += [
            '-visitor',
            '-listener',
            '-package', 'com.typeobject.wheeler.grammar',
            '-lib', "${projectDir}/${grammarPath}/fragments".toString()
    ]

    outputDirectory = file("${project.buildDir}/generated-src/antlr/main/com/typeobject/wheeler/grammar")
}

sourceSets {
    main {
        antlr {
            srcDir grammarPath
        }
    }
}

compileJava {
    dependsOn generateGrammarSource
    source generateGrammarSource
}

test {
    useJUnitPlatform()
}

clean {
    delete "${project.buildDir}/generated-src"
}